---------- 변동사항 -----------
Account가 한 명이라 가정했습니다.

Movie (attribute)
keyword 삭제
movie_id가 Id로 바뀜
Cumulative_audience 삭제
director 추가
Writer추가
Company 추가

Account
phone_number를 일반 Attribute로 변경
First_name,Middle_name, Last_name을 Name으로 통합
watching_count 삭제
Watching_limit 삭제
(Membership_grade에 Admin 추가)

버전
sub_Title 삭제

Actor
birth_year가 Byear로 바뀜
Death_year가 Dyear로 바뀜
Actor_id가 Id로 바뀜
Famous_role_name을 삭제
First_name,Middle_name, Last_name을 Aname으로 통합

<company entity> 
삭제

<Rating(weak entity)
Comment 삭제

<USER(Weak entity)>
삭제

<Admin>
삭제

Review삭제
---------- ER-to-Relational Mapping -----------
Step1: Mapping of Regular Entity Types
- MOVIE(Id(PK), Title, mType, Runtime, Start_year, End_year, Rating, Num_of_votes, Director, Writer, Company, Descriptions)
- ACCOUNT(Id(PK), Password, Phone_number, Name, Gender, Birthday, Job, Address, Age)
- GENRE(name(PK))
- ACTOR(Id(PK), Byear, Dyear, Gender, Aname)

Step2: Mapping of Weak Entity Types
- VERSION(Movie_id(FK), Title, Title, Region, Language, Is_original_title)
  - PK: (Movie_id, Title)
- EPISODE(Movie_id(FK), EP_title, EP_num, Season_title, Season_num)
	- PK: (Movie_id, EP_title)
- RATING(Rating_id, Account_id(FK), Stars, Movie_id(FK))
	- PK: (Rating_id, Account_id)

Step3: Mapping of Binary 1:1 Relationship Types
- We have no binary 1:1 relationship types.

Step4: Mapping of Binary 1:N Relationship Types
(All Binary 1:N Relationship Types in this databse already have FKs by step2.)
- BRANCH (1:N, MOVIE <-> VERSION)
	- Add Movie_id(FK) to VERSION
- EPISODE_OF (1:N, MOVIE <-> EPISODE)
	- ADD Movie_id(FK) to EPISODE
- HAS (1:N, MOVIE <-> RATING)
	- Add Movie_id(FK) to RATING
- MAKE (1:N, ACCOUNT <-> RATING)
	- Add Account_id(FK) to RATING
- UPLOAD (1:N, ACCOUNT(admin) <-> MOVIE)
  - Add Admin_id(FK) to Movie
	- MOVIE(Id(PK), Title, mType, Runtime, Start_year, End_year, Admin_id, Rating, Num_of_votes, Director, Writer, Company, Descriptions)

Step5: Mapping of Binary M:N Relationship Types
- PLAY (N:M, MOVIE <-> ACTOR)
	- Create a new relation PLAY
	- PLAY(Movie_id(FK), Actor_id(FK), cast)
- GENRE_OF (N:M, MOVIE <-> GENRE)
	- Create a new relation GENRE_OF
	- GENRE_OF(Movie_id(FK), Genre_name(FK))
- WATCH (N:M, MOVIE <-> ACCOUNT)
	- Create a new relation WATCH
	- WATCH(Movie_id(FK), Account_id(FK))


Step6: Mapping of Multivalued Attributes
- N.A.

Step7: Mapping of N-ary Relationship Types
- N.A.

Summary:
- MOVIE(Id(PK), Title, mType, Runtime, Start_year, End_year, Admin_id, Rating, Num_of_votes, Director, Writer, Company, Descriptions)
- ACCOUNT(Id(PK), Password, Phone_number, Name, Gender, Birthday, Job, Address, Age)
- GENRE(name(PK))
- ACTOR(Id(PK), Byear, Dyear, Gender, Aname);
- VERSION(Movie_id(FK), Title, Title, Region, Language, Is_original_title)
- EPISODE(Movie_id(FK), EP_title, EP_num, Season_title, Season_num)
- RATING(Rating_id, Account_id(FK), Stars, Movie_id(FK))
- PLAY(Movie_id(FK), Actor_id(FK), cast)
- GENRE_OF(Movie_id(FK), Genre_name(FK))
- WATCH(Movie_id(FK), Account_id(FK))
